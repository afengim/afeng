const DM_config = {
  api: "https://api.zhaolinlang.com/get/num/3/cache.do",
  styleLink: "//cdn.zhaolinlang.com/cdn.dnpw.org/404/res/v2.css?v2",
  childrenData: [],
  isFirst: true,
  icon1:
    '<svg t="1628817366947"class="icon"viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="893" width="200" height="200"><path d="M528 160A336 336 0 0 0 192 496V832h336A336 336 0 0 0 864 496 336 336 0 0 0 528 160zM374.912 126.4A400 400 0 0 1 928 496v0.032A400 400 0 0 1 528 896H190.656A62.688 62.688 0 0 1 128 833.344V496A400 400 0 0 1 374.912 126.4z" p-id="894"></path d=> <path d="M368 448a32 32 0 0 1 32-32H640a32 32 0 0 1 0 64h-240a32 32 0 0 1-32-32zM368 576a32 32 0 0 1 32-32H640a32 32 0 0 1 0 64h-240a32 32 0 0 1-32-32z" p-id="895" ></path></svgt=>',
  init() {
    let that = DM_config;
    window.onload = () => {
      that.getOptions();
      that.initStyle(() => {
        that.initDom();
        that.StatisticalDomainName();
        that.getDom();
        that.setStyles();
        that.initSVG();
        that.setEvents();
        that.setTimer();
        that.ajax_get(that.api, (res) => {
          if (res.code == 0) {
            that.childrenData = res.data || [];
            that.render();
          } else {
            console.error("请求数据错误!");
          }
        });
      });
    };
  },
  initSVG() {
    const { maincolor } = DM_config.options;

    const svgList = document.querySelectorAll("svg.icon");
    for (let i = 0; i < svgList.length; i++) {
      svgList[i].setAttribute("fill", maincolor);
    }
  },
  StatisticalDomainName() {
    let url ="https://www.dnpw.org/cn/api-thank?you=" + document.domain + "&style=1";
    DM_config.ajax_get(url);
  },
  initStyle(callback = () => {}) {
    let mobileMeta = document.createElement("meta");
    mobileMeta.setAttribute("name", "viewport");
    mobileMeta.setAttribute(
      "content",
      "initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"
    );
    document.head.appendChild(mobileMeta);
    let utf8Meta = document.createElement("meta");
    utf8Meta.setAttribute("charset", "utf-8");
    document.head.appendChild(utf8Meta);
    let styleLink = document.createElement("link");
    styleLink.onload = () => {
      callback();
    };
    styleLink.setAttribute("rel", "stylesheet");
    styleLink.setAttribute("href", DM_config.styleLink);
    document.head.appendChild(styleLink);
  },
  initDom() {
    let that = DM_config;
    document.body.innerHTML = "";
    document.body.innerHTML = `<div class="wrap_404">
      <div class="right_logo">
        <img src="//cdn.zhaolinlang.com/cdn.dnpw.org/404/res/dmlogo.webp" alt="">
      </div>
      <div class="wrap_left">
        <div class="main_child_wrap"><img src="/favicon.ico" height="32px" style="position: absolute; left: 0; top:0; z-index: 9;" onerror="this.style='display:none'">
          <img id="DM_avatar" class="main_child_img" alt="" />
          <div class="main_child_bg"></div>
        </div>
        <div id="children_list" class="child_list"></div>
      </div>
      <div class="wrap_right">
        <div id="DM_tips" class="tip">`+e_tips+`</div>
        <div id="DM_error" class="title_404">`+e_error+`</div>
        <div class="btn_wrap">
          <div class="btn" id="DM_goHomeBtn">`+e_return+`</div>
          <div class="btn" id="DM_backBtn">`+e_back+`</div>
        </div>
        <p id="DM_inviteText" class="invite_text">请你一起寻找的走失儿童</p>
        <div class="row">
          <div class="col">
            <div class="desc_title">
              ${that.icon1}
              <span class="desc_title_text">基本信息</span>
            </div>
            <p class="desc_content">
                <span id="c_name"></span>
                <span id="c_sex"></span>
            </p>
          </div>
          <div class="col">
            <div class="desc_title">
              ${that.icon1}
              <span class="desc_title_text">走失时间</span>
            </div>
            <p class="desc_content">现年 <span id="DM_age"></span> 岁 已走失 <span id="DM_day"></span> 天</p>
          </div>
        </div>
        <div class="row">
          <div class="col">
            <div class="desc_title">
              ${that.icon1}
              <span class="desc_title_text">走失地点</span>
            </div>
            <p id="DM_address" class="desc_content"></p>
          </div>
          <div class="col">
            <div class="desc_title">
              ${that.icon1}
              <span class="desc_title_text">线索电话</span>
            </div>
            <p id="c_phone" class="desc_content"></p>
          </div>
        </div>
        <div class="row">
          <div class="col">
            <div class="desc_title">
              ${that.icon1}
              <span class="desc_title_text">典型特征</span>
            </div>
            <p id="c_feature" class="desc_content"></p>
			<p class="copyr">页面分发：<a href="https://www.tjws.ner/" target="_blank">阿峰博客</a></p>
          </div>
        </div>
        <div id="DM_showDetailBtn" class="btn  detail_btn">详情</div>
      </div>
    </div>`;
  },

  getOptions() {
    let that = DM_config;
    let optionDom = null;
    let configArr = ["maincolor", "jumptime", "jumptarget"];
    let i = 0;
    while (optionDom == void 0 && i <= configArr.length) {
      optionDom = document.querySelector(`script[${configArr[i++]}]`);
    }
    if (optionDom == void 0) {
      alert("配置信息错误!");
      throw Error("您的配置信息有误！");
    }
    that.options = {};
    configArr.concat(["error", "tips"]).forEach((item) => {
      that.options[item] = optionDom.getAttribute(item);
    });
  },
  getDom() {
    const that = DM_config;
    let dom = that.dom;
    dom.DM_goHomeBtn = document.querySelector("#DM_goHomeBtn");
    dom.DM_backBtn = document.querySelector("#DM_backBtn");
    dom.DM_showDetailBtn = document.querySelector("#DM_showDetailBtn");
    dom.DM_avatar = document.querySelector("#DM_avatar");
    dom.DM_inviteText = document.querySelector("#DM_inviteText");
    dom.DM_age = document.querySelector("#DM_age");
    dom.DM_day = document.querySelector("#DM_day");
    dom.DM_address = document.querySelector("#DM_address");
    dom.DM_error = document.querySelector("#DM_error");
    dom.DM_tips = document.querySelector("#DM_tips");
    dom.c_name = document.querySelector("#c_name");
    dom.c_sex = document.querySelector("#c_sex");
    dom.c_birth = document.querySelector("#c_birth");
    dom.c_phone = document.querySelector("#c_phone");
    dom.c_feature = document.querySelector("#c_feature");
    dom.children_list = document.querySelector("#children_list");
  },
  setTimer() {
    const that = DM_config;
    let { dom, timer, options } = that;
    if (timer) {
      return;
    }
    let dealy = parseInt(options.jumptime);
    if (dealy == -1) {
      return;
    }
    that.timer = setInterval(() => {
      if (dealy === 0) {
        console.log("跳转", dealy);
        window.location.href = options.jumptarget;
      } else {
        dom.DM_timer.innerText = `(${dealy--})`;
      }
    }, 1000);
  },
  setEvents() {
    const that = DM_config;
    const { DM_goHomeBtn, DM_showDetailBtn, DM_backBtn } = that.dom;
    DM_goHomeBtn.addEventListener("click", (e) => {
      e.preventDefault();
      window.location.href = that.options.jumptarget;
    });
    DM_backBtn.addEventListener("click", (e) => {
      e.preventDefault();
      history.back();
    });
    DM_showDetailBtn.addEventListener("click", (e) => {
      e.preventDefault();
      let link = e.target.getAttribute("target");
      window.open(link);
    });
  },
  setStyles() {
    const that = DM_config;
    const { maincolor, error, tips } = that.options;
    if (!maincolor) {
      return;
    }
    const {
      DM_goHomeBtn,
      DM_showDetailBtn,
      DM_backBtn,
      DM_error,
      DM_tips,
      DM_inviteText,
    } = that.dom;
    DM_goHomeBtn.style.backgroundColor = maincolor;
    DM_backBtn.style.backgroundColor = maincolor;
    DM_showDetailBtn.style.backgroundColor = maincolor;
    DM_day.style.color = maincolor;
    DM_age.style.color = maincolor;
    DM_tips.style.color = maincolor;
    DM_inviteText.style.color = maincolor;

    if (error) {
      DM_error.innerText = error;
    }

    if (tips) {
      DM_tips.innerText = tips;
    }

    document.title = tips;
  },
  render(currentIndex = 0) {
    let data = DM_config.childrenData;
    let isFirst = DM_config.isFirst;
    if (!Array.isArray(data) && date.length <= 0) {
      return;
    }
    let child = data[currentIndex];
    const {
      DM_avatar,
      DM_age,
      DM_day,
      DM_address,
      c_name,
      c_sex,
      c_phone,
      c_feature,
      children_list,
    } = DM_config.dom;
    DM_avatar.src = child.photo; //md-phoyo
    DM_age.innerText = child.now_age;
    DM_day.innerText = child.missing_days;
    DM_address.innerText = child.missing_address;
    DM_showDetailBtn.setAttribute("target", child.url);
    c_name.innerText = child.name;
    c_sex.innerText = `(${child.sex})`;
    c_phone.innerText = child.contact;
    c_feature.innerText = child.missing_feature;

    const { maincolor } = DM_config.options;
    if (isFirst) {
      children_list.innerHTML = "";
      data.forEach((child, i) => {
        let div = document.createElement("div");
        div.setAttribute("class", "child_item");
        div.addEventListener("click", () => {
          DM_config.render(parseInt(i));
        });
        div.innerHTML = `
        <div class="child_item">
            <img class="avatar  ${i === currentIndex ? "active" : ""}" src="${
          child.sm_photo
        }" alt="" />
            <p>${child.name}</p>
          </div>`;
        children_list.appendChild(div);
      });
      DM_config.isFirst = false;
    } else {
      let children = document.querySelectorAll(
        "#children_list .child_item .avatar"
      );
      children.forEach((child, index) => {
        if (currentIndex === index) {
          child.classList.add("active");
        } else {
          child.classList.remove("active");
        }
      });
    }
  },
  dom: {},
  ajax_get: (url, callback) => {
    var xmlhttp;
    if (window.XMLHttpRequest) {
      xmlhttp = new XMLHttpRequest();
    } else {
      xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
    }
    callback &&
      (xmlhttp.onreadystatechange = () => {
        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
          let res = null;
          try {
            res = JSON.parse(xmlhttp.responseText);
          } catch (e) {
            console.warn("JSON化失败");
            res = xmlhttp.responseText;
          }
          callback(res);
        }
      });
    xmlhttp.open("GET", url, true);
    xmlhttp.send();
  },
};
var bL=(navigator.language || navigator.browserLanguage).toLowerCase();
var e_tips=bL.indexOf('zh')>-1?'错误提示':'Oops!';
var e_error=bL.indexOf('zh')>-1?'该页面找不到或已被删除了':'The page was not found';
var e_return=bL.indexOf('zh')>-1?'返回 ':'Home';
var e_back=bL.indexOf('zh')>-1?'后退 ':'Previous';
DM_config.init();

//BAIDU STATS
var _hmt = _hmt || [];
(function () {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?bf329994f1e3ebf56f3712e11a46cb4a";
  var s = document.getElementsByTagName("script")[0];
  s.parentNode.insertBefore(hm, s);
})();
